"""feat: add cascade delete relationships

Revision ID: c48758dce0b3
Revises: 119709b3f9bb
Create Date: 2024-08-02 16:33:22.524259

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'c48758dce0b3'
down_revision = '119709b3f9bb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('item', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.Uuid(),
               existing_nullable=False)
    op.alter_column('item', 'owner_id',
               existing_type=sa.INTEGER(),
               type_=sa.Uuid(),
               existing_nullable=False)
    op.drop_constraint('item_owner_id_fkey', 'item', type_='foreignkey')
    op.create_foreign_key(None, 'item', 'user', ['owner_id'], ['id'], ondelete='CASCADE')
    op.alter_column('task', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.Uuid(),
               existing_nullable=False)
    op.alter_column('task', 'owner_id',
               existing_type=sa.INTEGER(),
               type_=sa.Uuid(),
               existing_nullable=False)
    op.drop_constraint('task_owner_id_fkey', 'task', type_='foreignkey')
    op.create_foreign_key(None, 'task', 'user', ['owner_id'], ['id'], ondelete='CASCADE')
    op.alter_column('user', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.Uuid(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('user_id_seq'::regclass)"))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'id',
               existing_type=sa.Uuid(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('user_id_seq'::regclass)"))
    op.drop_constraint(None, 'task', type_='foreignkey')
    op.create_foreign_key('task_owner_id_fkey', 'task', 'user', ['owner_id'], ['id'])
    op.alter_column('task', 'owner_id',
               existing_type=sa.Uuid(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('task', 'id',
               existing_type=sa.Uuid(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_constraint(None, 'item', type_='foreignkey')
    op.create_foreign_key('item_owner_id_fkey', 'item', 'user', ['owner_id'], ['id'])
    op.alter_column('item', 'owner_id',
               existing_type=sa.Uuid(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('item', 'id',
               existing_type=sa.Uuid(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    # ### end Alembic commands ###
